project( cas )
cmake_minimum_required( VERSION 2.8 )

include( CheckCXXCompilerFlag )
check_cxx_compiler_flag( "-std=c++11"   COMPILER_SUPPORTS_CXX11 )
check_cxx_compiler_flag( "-std=c++0x"   COMPILER_SUPPORTS_CXX0X )
if( COMPILER_SUPPORTS_CXX11 )
    if( CMAKE_COMPILER_IS_GNUCXX )
        set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -pthread -lrt -D_GLIBCXX_USE_CXX11_ABI=0" )
    else()
        set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -lrt -D_GLIBCXX_USE_CXX11_ABI=0" )
    endif()
elseif( COMPILER_SUPPORTS_CXX0X)
    set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -pthread -lrt -D_GLIBCXX_USE_CXX11_ABI=0" )
else()
    # MSVC, On by default (if available)
endif()

set(Boost_INCLUDE_DIR /home/jzh/git/boost_1_62_0)
set(Boost_LIBRARY_DIR /home/jzh/git/boost_1_62_0/stage/lib)
find_package(Boost COMPONENTS atomic thread timer date_time)
include_directories(${Boost_INCLUDE_DIR})
link_directories(${Boost_LIBRARY_DIR})
add_executable(test1  main.cpp)
target_link_libraries(test1 ${Boost_SYSTEM_LIBRARY})